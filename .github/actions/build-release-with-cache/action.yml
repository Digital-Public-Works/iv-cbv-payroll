name: Build release image with cache
description: Builds the Docker release image using Buildx registry cache for optimal performance
inputs:
  app_name:
    description: Name of application folder under infra directory
    required: true
outputs:
  image_name:
    description: The full image name
    value: ${{ steps.build.outputs.image_name }}
  image_tag:
    description: The image tag
    value: ${{ steps.build.outputs.image_tag }}
  full_image:
    description: The full image reference (name:tag)
    value: ${{ steps.build.outputs.full_image }}
runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Terraform
      uses: ./.github/actions/setup-terraform

    - name: Configure AWS credentials
      uses: ./.github/actions/configure-aws-credentials
      with:
        app_name: ${{ inputs.app_name }}
        environment: shared

    - name: Get cache repository URL
      id: get-cache-repo
      shell: bash
      run: |
        cache_repo=$(./bin/get-cache-repository "${{ inputs.app_name }}")
        echo "cache_repo=$cache_repo" >> "$GITHUB_OUTPUT"
        echo "Cache repository: $cache_repo"

    - name: Build release image with cache
      id: build
      shell: bash
      run: |
        make APP_NAME=${{ inputs.app_name }} release-build \
          CACHE_FROM="type=registry,ref=${{ steps.get-cache-repo.outputs.cache_repo }}:buildcache" \
          CACHE_TO="type=registry,ref=${{ steps.get-cache-repo.outputs.cache_repo }}:buildcache,mode=max"
        IMAGE_NAME=$(make APP_NAME=${{ inputs.app_name }} release-image-name)
        IMAGE_TAG=$(make release-image-tag)
        echo "image_name=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
        echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
        echo "full_image=$IMAGE_NAME:$IMAGE_TAG" >> "$GITHUB_OUTPUT"
        echo "Built image: $IMAGE_NAME:$IMAGE_TAG"
